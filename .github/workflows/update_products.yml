# .github/workflows/update_products.yml

name: Update Shopee Products

# Quando este workflow será executado
on:
  workflow_dispatch: # Permite acionar manualmente no GitHub Actions UI
  schedule:
    # Executa todos os dias à 00:00 (meia-noite UTC)
    # Ajuste o horário conforme sua necessidade. Ex: '0 3 * * *' para 03:00 UTC
    - cron: '0 0 * * *'

jobs:
  update-data:
    runs-on: ubuntu-latest # O sistema operacional onde o job será executado

    steps:
    - name: Checkout repository # Pega o código do seu repositório
      uses: actions/checkout@v4

    - name: Set up Python # Configura o ambiente Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # Usa a versão mais recente do Python 3

    - name: Install dependencies # Instala as bibliotecas Python necessárias
      run: |
        python -m pip install --upgrade pip
        pip install pandas requests

    - name: Run Python script to process datafeed # Executa o script que você criou
      env:
        # AQUI é onde seu link do datafeed é passado de forma segura
        # 'SHOPEE_DATAFEED_URL' deve ser adicionado como um Secret no GitHub
        SHOPEE_DATAFEED_URL: ${{ https://affiliate.shopee.com.br/api/v1/datafeed/download?id=YWJjZGVmZ2hpamtsbW5vcPNcbnfdFhhQkoz1FtnUm6DtED25ejObtofpYLqHBC0h }}
      run: python process_shopee_datafeed.py

    - name: Commit and Push changes # Commita o arquivo JSON gerado de volta para o repositório
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add . # Adiciona todos os arquivos alterados/novos (incluindo produtos_shopee.json)
        git commit -m "Automated: Update Shopee products data" || echo "No changes to commit" # Commita se houver mudanças
        git push # Envia as mudanças para o GitHub
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Token automático para push

